syntax = "proto3";

package percona.platform.dbaas.controller.v1beta1;

option go_package = "controller;controllerv1beta1";

import "controller/common.proto";
import "controller/psmdb_cluster.proto";
import "github.com/mwitkow/go-proto-validators/validator.proto";

// PSMDBClusterAPI provides APIs for managing PSMDB clusters.
service PSMDBClusterAPI {
  // ListPSMDBClusters returns a list of PSMDB clusters.
  rpc ListPSMDBClusters(ListPSMDBClustersRequest) returns (ListPSMDBClustersResponse);
  // CreatePSMDBCluster creates a new PSMDB cluster.
  rpc CreatePSMDBCluster(CreatePSMDBClusterRequest) returns (CreatePSMDBClusterResponse);
  // UpdatePSMDBCluster updates existing PSMDB cluster.
  rpc UpdatePSMDBCluster(UpdatePSMDBClusterRequest) returns (UpdatePSMDBClusterResponse);
  // DeletePSMDBCluster deletes PSMDB cluster.
  rpc DeletePSMDBCluster(DeletePSMDBClusterRequest) returns (DeletePSMDBClusterResponse);
}

message ListPSMDBClustersRequest {
  // Kubernetes auth.
  KubeAuth kube_auth = 1 [
    (validator.field) = {
      msg_exists: true
    }
  ];
}

message ListPSMDBClustersResponse {
  // Cluster represents PSMDB cluster information.
  message Cluster {
    // Cluster name.
    string name = 1;
    // Cluster state.
    PSMDBClusterState state = 2;
    // Currently running operation, if any.
    RunningOperation operation = 3;
    // Cluster parameters.
    PSMDBClusterParams params = 4;
  }
  // PSMDB clusters information.
  repeated Cluster clusters = 1;
}

message CreatePSMDBClusterRequest {
  // Kubernetes auth.
  KubeAuth kube_auth = 1 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // Cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // Cluster parameters.
  PSMDBClusterParams params = 3 [
    (validator.field) = {
      msg_exists: true
    }
  ];
}

message CreatePSMDBClusterResponse {}

message UpdatePSMDBClusterRequest {
  // Kubernetes auth.
  KubeAuth kube_auth = 1 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // Cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
  // ReplicaSet container parameters.
  message ReplicaSet {
    // Requested compute resources.
    ComputeResources compute_resources = 3;
  }
  // Cluster size.
  int32 cluster_size = 4 [
    (validator.field) = {
      int_gt: 0
    }
  ];
}

message UpdatePSMDBClusterResponse {}

message DeletePSMDBClusterRequest {
  // Kubernetes auth.
  KubeAuth kube_auth = 1 [
    (validator.field) = {
      msg_exists: true
    }
  ];
  // Cluster name.
  string name = 2 [
    (validator.field) = {
      string_not_empty: true
    }
  ];
}

message DeletePSMDBClusterResponse {}
